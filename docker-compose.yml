version: '3.8'

name: st-crm-backend

x-common-settings: &common-settings
  platform: linux/amd64
  restart: always
  networks:
    - st-crm-api

x-common-settings-nodejs: &common-settings-nodejs
  extra_hosts:
    - 'host.docker.internal:host-gateway'
  volumes:
    - .:/app
    - node_modules:/app/node_modules
  depends_on:
    - mongodb
    - redis
    - nats

services:
  redis:
    image: redis:latest
    <<: *common-settings
    ports:
      - '${DOCKER_REDIS_HOST:-127.0.0.1}:${DOCKER_REDIS_PORT:-6379}:6379'
    command: redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
    volumes:
      - .docker/configs/redis.conf:/usr/local/etc/redis/redis.conf
      - .docker/configs/users.acl:/usr/local/etc/redis/users.acl
      - .data/redis:/data

  nats:
    image: nats:alpine3.20
    <<: *common-settings
    ports:
      - '${DOCKER_NAT_HOST:-127.0.0.1}:${DOCKER_NAT_PORT:-4222}:4222'
      - '${DOCKER_NAT_MNG_HOST:-127.0.0.1}:${DOCKER_NAT_MNG_PORT:-8222}:8222'

  mongodb:
    build:
      context: .
      dockerfile: .docker/mongodb/Dockerfile
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${DOCKER_MONGO_HOST:-127.0.0.1}:${DOCKER_MONGO_PORT:-27017}:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGO_REPLICA_SET_NAME: rs0
    healthcheck:
      test: |
        echo "try {
          rs.status()
        } catch (err) {
          rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]})
        }" | mongosh --port 27017 --username $${MONGO_INITDB_ROOT_USERNAME} --password $${MONGO_INITDB_ROOT_PASSWORD} --quiet
    volumes:
      - .data/mongodb:/data/db
    restart: always
    networks:
      - st-crm-api

  api:
    <<: [*common-settings, *common-settings-nodejs]
    build:
      context: .
      target: ${DOCKER_BUILD_TARGET:-development}-api
      dockerfile: .docker/node/Dockerfile
    ports:
      - '${DOCKER_API_HOST:-127.0.0.1}:${DOCKER_API_PORT:-5000}:5000'

  user:
    <<: [*common-settings, *common-settings-nodejs]
    build:
      context: .
      target: ${DOCKER_BUILD_TARGET:-development}-user
      dockerfile: .docker/node/Dockerfile

networks:
  st-crm-api:
    driver: bridge

volumes:
  node_modules:
